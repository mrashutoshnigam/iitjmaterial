
Meeting Catch-Up Summary

Bhumika (PhD Scholar):
- Discussed quiz answers and marking issues.
- Some papers need manual rechecking due to keyword matching problems.

Quiz Topics Covered:
- Environment types for autonomous taxis.
- Depth-first search (DFS) algorithms.
- Agent types.
- Transition models for vacuum cleaners.

Debates & Discussions:
- Whether cleaning robots should be considered simple or model-based agents.
- How to handle obstacles in transition models.
- Issues with DFS questions for non-CS students.

Professor Debasis Das Addressed:
- Manual rechecking of papers.
- Possibly removing problematic questions.
- Introduction of relative grading system.
- Future topics: first-order logic.
- Discussion on online vs. offline exam challenges and ensuring fair evaluation.


Key Concepts Discussed

Iterative Deepening Search (IDS):
- When to Use IDS: 
  - To get better DFS memory footprint (space complexity).
  - To avoid infinite cycles.
  - To ensure optimality, like BFS.
  - When using depth-restricted DFS.
  
- Properties of IDS:
  - Depth-restricted DFS with increasing depth limits.
  - Good DFS memory footprint.
  - Avoids infinite cycles.
  - Optimal in some cases.
  - Time complexity: B^d (where B is branching factor, and d is depth).
  - Multiple iterations result in higher complexity.


Informed Search:
- When to Use:
  - Large search space where itâ€™s unclear which path to take.
  - To improve efficiency by expanding as few nodes as possible.
  
- Advantages of Informed Search:
  - Uses additional information like maps or GPS coordinates.
  - Uses a heuristic function to rank nodes and select the most promising path.
  
- Heuristic Functions:
  - Help estimate the cost from the current node to the goal.
  - Rank nodes in the frontier.
  - Key for improving efficiency in informed search.


Romania Problem:
- Explanation:
  - A search problem involving two possible paths from source to destination.
  - Path 1 cost: 418, Path 2 cost: around 450.
  - The algorithm uses heuristic logic to calculate straight-line distance (366).
  - Heuristic-based decisions may not always result in the shortest path.


Greedy Best-First Search (GBFS):
- Key Points:
  - Uses a heuristic function to find paths, typically using straight-line distance.
  - Expands nodes with the lowest heuristic value.
  - Not optimal, as it does not guarantee the shortest path.
  
- Romania Problem Example:
  - Starts from source node, checks connected neighbors, and selects the node with the lowest heuristic value.
  - May not always provide the shortest path.
  
- Properties:
  - Complete but not optimal.
  - Uses additional information like maps or GPS coordinates.
  - Aims to improve efficiency by expanding fewer nodes.


A* Search Algorithm:
- Key Points:
  - A* enhances GBFS by considering both path cost and heuristic values: f(n) = path cost + heuristic value.
  - Provides better paths than GBFS due to this combined consideration.
  - Increases computation due to the additional calculations for path cost.
  
- Romania Problem Example:
  - A* selects nodes based on both actual path cost and heuristic value, ensuring a more optimal path compared to GBFS.
  - Formula: f(n) = path cost + heuristic cost.


Additional Discussions:
- Pseudo Code for Informed Search: 
  - Uses heuristic functions and best-first search strategies.
  - The process involves selecting the most promising node based on its heuristic value.
  
- Greedy Best-First Search Pseudo Code:
  - Starts at the source, checks neighbors, and selects the node with the minimum heuristic value.


Summary of Questions and Answers:
- Heuristic Function with Multiple Variables:
  - Yes, heuristic functions can depend on multiple variables, though the basic example used was straight-line distance.
  
- Cyclic Redundancy in the Graph:
  - The student inquired about potential cycles, and the professor clarified that cycles were just shown for connectivity, not actual movement.

Topics Covered:
- Quiz discussion and evaluation.
- Iterative Deepening Search (IDS).
- Informed Search and its applications.
- Greedy Best-First Search (GBFS) and its properties.
- Heuristic functions in search algorithms.
- A* Search algorithm.
- Romania problem as an example of path-finding.
